{"ast":null,"code":"export function estadisticasFecha(dia, mes, anio) {\n  alert(\"La Fecha es: \" + dia + \"/\" + mes + \"/\" + anio);\n  let diasDelMes = calcularDiasDelMes(mes, anio);\n  alert(\"el mes: \" + mes + \" , tiene \" + diasDelMes); //A: mostramos los dias del mes\n\n  let anioEsBisiesto = esBisiesto(anio);\n  if (anioEsBisiesto) alert(\"el anio: \" + anio + \" , es bisiesto\");else alert(\"el anio: \" + anio + \" , NO es bisiesto\"); //A: mostramos si el anio es bisiesto\n\n  let diaJuliano = calcularFechaJuliana(dia, mes, anio);\n  alert(\"dia juliano: \" + diaJuliano);\n  const fechas = [dia, mes, anio];\n  const fecha = [];\n  let key = \"fechas\";\n  obtener_LocalStorage(key);\n  guardar_LocalStorage(key, fechas); //obtener_LocalStorage(key)\n\n  console.log(dia, mes, anio);\n}\nexport function esBisiesto(anio) {\n  //U: devuelve true si el anio es bisiesto, false caso contrario\n  if (anio % 4 == 0) {\n    return true;\n  }\n\n  return false;\n}\nexport function calcularDiasDelMes(mes, anio) {\n  //A: devuelve entero que representa los dias del mes que pasron como paramnetro\n  let anioEsBisiesto = esBisiesto(anio);\n\n  if (mes == \"4\" || mes == \"6\" || mes == \"9\" || mes == \"11\") {\n    return 30;\n  } else if (mes == \"2\" && anioEsBisiesto) {\n    return 29;\n  } else if (mes == \"2\") {\n    return 28;\n  } else {\n    return 31;\n  }\n}\nexport function calcularFechaJuliana(dia, mes, anio) {\n  let Jdia = parseInt(dia);\n  let Jmes = parseInt(mes);\n  let Janio = parseInt(anio);\n  let Y = Janio - 1;\n  let M = Jmes + 12;\n  let D = Jdia;\n  let A = Y / 100;\n  A = A.toFixed();\n  let B = 2 - A + A / 4;\n  let dj = 0;\n  dj = 365.25 * (Y + 4716) + 30.6001 * (M + 1) + D + B - 1524.5;\n  return dj;\n}\n\nfunction guardar_LocalStorage(dia, mes, anio) {\n  let guardar_Storage = {\n    dia,\n    mes,\n    anio\n  };\n  fecha.push(guardar_Storage);\n  localStorage.setItem(\"fechas\", JSON.stringify(fecha));\n}\n\nfunction obtener_LocalStorage() {\n  if (localStorage.getItem(\"fechas\")) {\n    fechas = JSON.parse(localStorage.getItem(\"fechas\"));\n  } else {\n    console.log(\"No hay entradas en localstorage\");\n  }\n\n  return fechas;\n}","map":{"version":3,"sources":["/home/bruno/Escritorio/router-app/src/utils/index.js"],"names":["estadisticasFecha","dia","mes","anio","alert","diasDelMes","calcularDiasDelMes","anioEsBisiesto","esBisiesto","diaJuliano","calcularFechaJuliana","fechas","fecha","key","obtener_LocalStorage","guardar_LocalStorage","console","log","Jdia","parseInt","Jmes","Janio","Y","M","D","A","toFixed","B","dj","guardar_Storage","push","localStorage","setItem","JSON","stringify","getItem","parse"],"mappings":"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","sourcesContent":["export function estadisticasFecha(dia, mes, anio){\n\n  \n     \n  alert(\"La Fecha es: \"+dia+\"/\"+mes+\"/\"+anio);\n\n  let diasDelMes= calcularDiasDelMes(mes, anio);\n  alert(\"el mes: \" + mes + \" , tiene \" + diasDelMes);\n  //A: mostramos los dias del mes\n  \n  let anioEsBisiesto= esBisiesto(anio);\n  if (anioEsBisiesto) alert(\"el anio: \" + anio + \" , es bisiesto\")\n  else alert(\"el anio: \" + anio + \" , NO es bisiesto\")\n  //A: mostramos si el anio es bisiesto\n  \n  let diaJuliano= calcularFechaJuliana(dia, mes, anio);\n  alert( \"dia juliano: \" + diaJuliano);\n  \n  const fechas = [dia, mes, anio]\n  const fecha = []\n\n  let key = \"fechas\"\n  obtener_LocalStorage(key)\n  guardar_LocalStorage(key, fechas);\n  //obtener_LocalStorage(key)\n  \n\n  console.log(dia, mes, anio)\n\n}\n\nexport function  esBisiesto(anio){ //U: devuelve true si el anio es bisiesto, false caso contrario\n  if (anio % 4 == 0){\n    return true;\n  }\n  return false  \n}\n\nexport function calcularDiasDelMes(mes, anio){ //A: devuelve entero que representa los dias del mes que pasron como paramnetro\n  let anioEsBisiesto= esBisiesto(anio);\n  if(mes == \"4\" || mes == \"6\" || mes == \"9\" || mes == \"11\"){\n    return 30;\n  }else if (mes == \"2\" && anioEsBisiesto){\n    return 29;\n  }else if (mes == \"2\" ){\n    return 28;\n  }else{\n    return 31;\n  }\n}\n\nexport function  calcularFechaJuliana(dia, mes, anio){\n  let Jdia= parseInt(dia);\n  let Jmes= parseInt(mes);\n  let Janio= parseInt(anio);\n  \n  let Y = Janio - 1; \n  \n  let M = Jmes + 12; \n  \n  let D = Jdia; \n  \n  let A = Y / 100; \n  A = A.toFixed();\n  \n  let B = 2 - A + A/4; \n  \n  \n  let dj = 0;\n  dj = (365.25*(Y+4716))+(30.6001*(M+1))+D+(B)-1524.5;\n  return dj;\n}\n\nfunction guardar_LocalStorage(dia, mes, anio){\n  let guardar_Storage = {dia, mes, anio};\n  \n  fecha.push(guardar_Storage);\n  localStorage.setItem(\"fechas\", JSON.stringify(fecha));\n}\n\nfunction obtener_LocalStorage(){\n  if(localStorage.getItem(\"fechas\")){\n    fechas = JSON.parse( localStorage.getItem(\"fechas\"));\n  }else{\n    console.log(\"No hay entradas en localstorage\")\n  }\n  return fechas;\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}